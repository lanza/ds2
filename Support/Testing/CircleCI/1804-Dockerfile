##
## Copyright (c) 2014-present, Facebook, Inc.
## All rights reserved.
##
## This source code is licensed under the University of Illinois/NCSA Open
## Source License found in the LICENSE file in the root directory of this
## source tree. An additional grant of patent rights can be found in the
## PATENTS file in the same directory.
##

# BEFORE PUSHING A NEW DOCKER IMAGE, PLEASE READ ALL OF THESE INSTRUCTIONS!
#
# To build a docker image using this file, run the following command:
#     docker build -f Support/Testing/CircleCI/1804-Dockerfile .
#
# After building the image, you will see a line like this at the end of the
# build process:
#     Successfully built 360abf8e6246
#
# This hash identifies the image you just built. You can then run it locally
# with the following command:
#     docker run --privileged --security-opt seccomp:unconfined --rm -it --name ds2-1804-testing 360abf8e6246
# We run in privileged mode so that we may use ptrace to its full
# extent as needed.
#
# When building a new docker image, it's important to tag it by the date and
# time you built the image so that we can revert to an older image if something
# goes wrong when we build the new one.
# For example, if you built the image on November 1st, 2018 at 4:20:00 pm, your tag
# would be something like: 2018-11-01_16-20-00.
#
# Publishing the image for use by CircleCI is done with:
#     docker tag 360abf8e6246 sas42/ds2-build-env:<tag>
#     docker push lanza/ds2-1804-build-env:<tag>

FROM ubuntu:18.04
MAINTAINER Nathan Lanza <lanza@fb.com>

# Install apt tools
RUN apt update -y
RUN apt upgrade -y
RUN apt install -y software-properties-common wget

# Install build dependencies
RUN apt install -y cmake ninja-build
RUN apt install -y flex bison

# Install x86 compilers
RUN apt install -y g++-multilib
RUN apt install -y clang-6.0

# Install arm compilers
RUN apt install -y g++-multilib-arm-linux-gnueabi

# Install mingw compilers
RUN apt install -y g++-mingw-w64-x86-64
RUN apt install -y g++-mingw-w64-i686

# Install test dependencies
RUN apt install -y git lldb-6.0 gdb clang-format-6.0 make dejagnu

# Install documentation dependencies
RUN apt install -y doxygen graphviz

# Create multilib symlink for gcc 4.9
RUN ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/asm

# Create ds2 testing directory
RUN mkdir /ds2test

# Install Android toolchains with our local script
COPY Support/Scripts/common.sh /ds2test
COPY Support/Scripts/prepare-android-ndk.sh /ds2test
RUN apt install -y unzip
RUN /ds2test/prepare-android-ndk.sh

# Install and fix 
# https://linoxide.com/linux-how-to/install-android-sdk-manager-ubuntu/
RUN apt install -y default-jdk

# Install Android emulators
COPY Support/Scripts/install-android-emulator.sh /ds2test
RUN /ds2test/install-android-emulator.sh arm
RUN /ds2test/install-android-emulator.sh arm64
RUN /ds2test/install-android-emulator.sh x86
